// Code Generated by Sidekick is for learning and experimentation purposes only.
const axios = require('axios');
const dayjs = require('dayjs');

const AUTH0_DOMAIN = secrets.AUTH0_DOMAIN;
const AUTH0_CLIENT_ID = secrets.AUTH0_CLIENT_ID;
const AUTH0_CLIENT_SECRET = secrets.AUTH0_CLIENT_SECRET;

async function getAuth0Token() {
  const response = await axios.post(`https://${AUTH0_DOMAIN}/oauth/token`, {
    client_id: AUTH0_CLIENT_ID,
    client_secret: AUTH0_CLIENT_SECRET,
    audience: `https://${AUTH0_DOMAIN}/api/v2/`,
    grant_type: 'client_credentials'
  }, {
    headers: { 'content-type': 'application/json' }
  });
  return response.data.access_token;
}

async function blockInactiveUsers() {
  const token = await getAuth0Token();
  const headers = { Authorization: `Bearer ${token}` };
  const response = await axios.get(`https://${AUTH0_DOMAIN}/api/v2/users`, { headers });
  
  const users = response.data;
  users.forEach(async (user) => {
    const lastLogin = user.last_login;
    if (lastLogin) {
      const lastLoginDate = dayjs(lastLogin);
      if (dayjs().diff(lastLoginDate, 'day') > 4) {
        const userId = user.user_id;
        await axios.patch(`https://${AUTH0_DOMAIN}/api/v2/users/${userId}`, { blocked: true }, { headers });
      }
    }
  });
}

blockInactiveUsers().catch(console.error);
